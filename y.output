Terminals unused in grammar

   UMINUS


Rules useless in parser due to conflicts

   13 comma_ident_int_array: /* empty */


State 10 conflicts: 1 reduce/reduce
State 18 conflicts: 1 reduce/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: /* empty */
    3        | function program

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    5 declaration_block: /* empty */
    6                  | declaration SEMICOLON declaration_block

    7 statement_block: /* empty */
    8                | statement SEMICOLON statement_block

    9 declaration: IDENT comma_ident_int COLON INTEGER
   10            | IDENT comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 comma_ident_int: /* empty */
   12                | COMMA IDENT comma_ident_int

   13 comma_ident_int_array: /* empty */
   14                      | COMMA IDENT comma_ident_int_array

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statement SEMICOLON statement_block else_block ENDIF
   17          | WHILE bool_exp BEGINLOOP statement SEMICOLON statement_block ENDLOOP
   18          | DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_exp
   19          | READ var var_block
   20          | WRITE var var_block
   21          | CONTINUE
   22          | RETURN expression

   23 else_block: /* empty */
   24           | ELSE statement SEMICOLON statement_block

   25 var_block: /* empty */
   26          | COMMA var var_block

   27 bool_exp: relation_and_expr rel_or

   28 rel_or: OR relation_and_expr rel_or
   29       | /* empty */

   30 relation_and_expr: relation_expr rel_and

   31 rel_and: AND relation_and_expr
   32        | /* empty */

   33 relation_expr: rel_expr
   34              | NOT rel_expr

   35 rel_expr: expression comp expression
   36         | TRUE
   37         | FALSE
   38         | L_PAREN bool_exp R_PAREN

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 expression: multiplicative_expr mult_expr

   46 mult_expr: ADD multiplicative_expr mult_expr
   47          | SUB multiplicative_expr mult_expr
   48          | /* empty */

   49 multiplicative_expr: term mult_expr_term

   50 mult_expr_term: MULT term mult_expr_term
   51               | DIV term mult_expr_term
   52               | MOD term mult_expr_term
   53               | /* empty */

   54 term: SUB term_minus
   55     | term_minus
   56     | IDENT L_PAREN exp_comma_block R_PAREN

   57 term_minus: var
   58           | NUMBER
   59           | L_PAREN expression R_PAREN

   60 exp_comma_block: expression exp_comma_block2
   61                | /* empty */

   62 exp_comma_block2: /* empty */
   63                 | COMMA expression exp_comma_block2

   64 var: IDENT
   65    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 9 10
ARRAY (266) 10
OF (267) 10
IF (268) 16
THEN (269) 16
ENDIF (270) 16
ELSE (271) 24
WHILE (272) 17 18
DO (273) 18
BEGINLOOP (274) 17 18
ENDLOOP (275) 17 18
CONTINUE (276) 21
READ (277) 19
WRITE (278) 20
AND (279) 31
OR (280) 28
NOT (281) 34
TRUE (282) 36
FALSE (283) 37
RETURN (284) 22
NUMBER (285) 10 58
IDENT (286) 4 9 10 12 14 56 64 65
SUB (287) 47 54
ADD (288) 46
MULT (289) 50
DIV (290) 51
MOD (291) 52
EQ (292) 39
NEQ (293) 40
LT (294) 41
GT (295) 42
LTE (296) 43
GTE (297) 44
SEMICOLON (298) 4 6 8 16 17 18 24
COLON (299) 9 10
COMMA (300) 12 14 26 63
L_PAREN (301) 38 56 59
R_PAREN (302) 38 56 59
L_SQUARE_BRACKET (303) 10 65
R_SQUARE_BRACKET (304) 10 65
ASSIGN (305) 15
UMINUS (306)


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
start (53)
    on left: 1, on right: 0
program (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declaration_block (56)
    on left: 5 6, on right: 4 6
statement_block (57)
    on left: 7 8, on right: 4 8 16 17 18 24
declaration (58)
    on left: 9 10, on right: 6
comma_ident_int (59)
    on left: 11 12, on right: 9 12
comma_ident_int_array (60)
    on left: 13 14, on right: 10 14
statement (61)
    on left: 15 16 17 18 19 20 21 22, on right: 4 8 16 17 18 24
else_block (62)
    on left: 23 24, on right: 16
var_block (63)
    on left: 25 26, on right: 19 20 26
bool_exp (64)
    on left: 27, on right: 16 17 18 38
rel_or (65)
    on left: 28 29, on right: 27 28
relation_and_expr (66)
    on left: 30, on right: 27 28 31
rel_and (67)
    on left: 31 32, on right: 30
relation_expr (68)
    on left: 33 34, on right: 30
rel_expr (69)
    on left: 35 36 37 38, on right: 33 34
comp (70)
    on left: 39 40 41 42 43 44, on right: 35
expression (71)
    on left: 45, on right: 15 22 35 59 60 63 65
mult_expr (72)
    on left: 46 47 48, on right: 45 46 47
multiplicative_expr (73)
    on left: 49, on right: 45 46 47
mult_expr_term (74)
    on left: 50 51 52 53, on right: 49 50 51 52
term (75)
    on left: 54 55 56, on right: 49 50 51 52
term_minus (76)
    on left: 57 58 59, on right: 54 55
exp_comma_block (77)
    on left: 60 61, on right: 56
exp_comma_block2 (78)
    on left: 62 63, on right: 60 63
var (79)
    on left: 64 65, on right: 15 19 20 26 57


State 0

    0 $accept: . start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    start     go to state 2
    program   go to state 3
    function  go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: start . $end

    $end  shift, and go to state 6


State 3

    1 start: program .

    $default  reduce using rule 1 (start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: start $end .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration_block)

    declaration_block  go to state 11
    declaration        go to state 12


State 10

    9 declaration: IDENT . comma_ident_int COLON INTEGER
   10            | IDENT . comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 13

    COLON     reduce using rule 11 (comma_ident_int)
    COLON     [reduce using rule 13 (comma_ident_int_array)]
    $default  reduce using rule 11 (comma_ident_int)

    comma_ident_int        go to state 14
    comma_ident_int_array  go to state 15


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block . END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    END_PARAMS  shift, and go to state 16


State 12

    6 declaration_block: declaration . SEMICOLON declaration_block

    SEMICOLON  shift, and go to state 17


State 13

   12 comma_ident_int: COMMA . IDENT comma_ident_int
   14 comma_ident_int_array: COMMA . IDENT comma_ident_int_array

    IDENT  shift, and go to state 18


State 14

    9 declaration: IDENT comma_ident_int . COLON INTEGER

    COLON  shift, and go to state 19


State 15

   10 declaration: IDENT comma_ident_int_array . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 16

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS . BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 17

    6 declaration_block: declaration SEMICOLON . declaration_block

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration_block)

    declaration_block  go to state 22
    declaration        go to state 12


State 18

   12 comma_ident_int: COMMA IDENT . comma_ident_int
   14 comma_ident_int_array: COMMA IDENT . comma_ident_int_array

    COMMA  shift, and go to state 13

    COLON     reduce using rule 11 (comma_ident_int)
    COLON     [reduce using rule 13 (comma_ident_int_array)]
    $default  reduce using rule 11 (comma_ident_int)

    comma_ident_int        go to state 23
    comma_ident_int_array  go to state 24


State 19

    9 declaration: IDENT comma_ident_int COLON . INTEGER

    INTEGER  shift, and go to state 25


State 20

   10 declaration: IDENT comma_ident_int_array COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    ARRAY  shift, and go to state 26


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS . declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declaration_block)

    declaration_block  go to state 27
    declaration        go to state 12


State 22

    6 declaration_block: declaration SEMICOLON declaration_block .

    $default  reduce using rule 6 (declaration_block)


State 23

   12 comma_ident_int: COMMA IDENT comma_ident_int .

    $default  reduce using rule 12 (comma_ident_int)


State 24

   14 comma_ident_int_array: COMMA IDENT comma_ident_int_array .

    $default  reduce using rule 14 (comma_ident_int_array)


State 25

    9 declaration: IDENT comma_ident_int COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 26

   10 declaration: IDENT comma_ident_int_array COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block . END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   10 declaration: IDENT comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS . BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   10 declaration: IDENT comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY . statement SEMICOLON statement_block END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 41
    var        go to state 42


State 32

   10 declaration: IDENT comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 33

   16 statement: IF . bool_exp THEN statement SEMICOLON statement_block else_block ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 51
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 34

   17 statement: WHILE . bool_exp BEGINLOOP statement SEMICOLON statement_block ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 60
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 35

   18 statement: DO . BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 61


State 36

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 37

   19 statement: READ . var var_block

    IDENT  shift, and go to state 40

    var  go to state 62


State 38

   20 statement: WRITE . var var_block

    IDENT  shift, and go to state 40

    var  go to state 63


State 39

   22 statement: RETURN . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    expression           go to state 65
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 40

   64 var: IDENT .
   65    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 64 (var)


State 41

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement . SEMICOLON statement_block END_BODY

    SEMICOLON  shift, and go to state 67


State 42

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 68


State 43

   10 declaration: IDENT comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 69


State 44

   34 relation_expr: NOT . rel_expr

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    rel_expr             go to state 70
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 45

   36 rel_expr: TRUE .

    $default  reduce using rule 36 (rel_expr)


State 46

   37 rel_expr: FALSE .

    $default  reduce using rule 37 (rel_expr)


State 47

   58 term_minus: NUMBER .

    $default  reduce using rule 58 (term_minus)


State 48

   56 term: IDENT . L_PAREN exp_comma_block R_PAREN
   64 var: IDENT .
   65    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 71
    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 64 (var)


State 49

   54 term: SUB . term_minus

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 40
    L_PAREN  shift, and go to state 64

    term_minus  go to state 72
    var         go to state 59


State 50

   38 rel_expr: L_PAREN . bool_exp R_PAREN
   59 term_minus: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 73
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 74
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 51

   16 statement: IF bool_exp . THEN statement SEMICOLON statement_block else_block ENDIF

    THEN  shift, and go to state 75


State 52

   27 bool_exp: relation_and_expr . rel_or

    OR  shift, and go to state 76

    $default  reduce using rule 29 (rel_or)

    rel_or  go to state 77


State 53

   30 relation_and_expr: relation_expr . rel_and

    AND  shift, and go to state 78

    $default  reduce using rule 32 (rel_and)

    rel_and  go to state 79


State 54

   33 relation_expr: rel_expr .

    $default  reduce using rule 33 (relation_expr)


State 55

   35 rel_expr: expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 56

   45 expression: multiplicative_expr . mult_expr

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 48 (mult_expr)

    mult_expr  go to state 89


State 57

   49 multiplicative_expr: term . mult_expr_term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 53 (mult_expr_term)

    mult_expr_term  go to state 93


State 58

   55 term: term_minus .

    $default  reduce using rule 55 (term)


State 59

   57 term_minus: var .

    $default  reduce using rule 57 (term_minus)


State 60

   17 statement: WHILE bool_exp . BEGINLOOP statement SEMICOLON statement_block ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 61

   18 statement: DO BEGINLOOP . statement SEMICOLON statement_block ENDLOOP WHILE bool_exp

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 95
    var        go to state 42


State 62

   19 statement: READ var . var_block

    COMMA  shift, and go to state 96

    $default  reduce using rule 25 (var_block)

    var_block  go to state 97


State 63

   20 statement: WRITE var . var_block

    COMMA  shift, and go to state 96

    $default  reduce using rule 25 (var_block)

    var_block  go to state 98


State 64

   59 term_minus: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    expression           go to state 99
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 65

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 66

   65 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    expression           go to state 100
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 67

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON . statement_block END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (statement_block)

    statement_block  go to state 101
    statement        go to state 102
    var              go to state 42


State 68

   15 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    expression           go to state 103
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 69

   10 declaration: IDENT comma_ident_int_array COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 70

   34 relation_expr: NOT rel_expr .

    $default  reduce using rule 34 (relation_expr)


State 71

   56 term: IDENT L_PAREN . exp_comma_block R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    $default  reduce using rule 61 (exp_comma_block)

    expression           go to state 104
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    exp_comma_block      go to state 105
    var                  go to state 59


State 72

   54 term: SUB term_minus .

    $default  reduce using rule 54 (term)


State 73

   38 rel_expr: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 106


State 74

   35 rel_expr: expression . comp expression
   59 term_minus: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85
    R_PAREN  shift, and go to state 107

    comp  go to state 86


State 75

   16 statement: IF bool_exp THEN . statement SEMICOLON statement_block else_block ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 108
    var        go to state 42


State 76

   28 rel_or: OR . relation_and_expr rel_or

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    relation_and_expr    go to state 109
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 77

   27 bool_exp: relation_and_expr rel_or .

    $default  reduce using rule 27 (bool_exp)


State 78

   31 rel_and: AND . relation_and_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    relation_and_expr    go to state 110
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 79

   30 relation_and_expr: relation_expr rel_and .

    $default  reduce using rule 30 (relation_and_expr)


State 80

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 81

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 82

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 83

   42 comp: GT .

    $default  reduce using rule 42 (comp)


State 84

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 85

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 86

   35 rel_expr: expression comp . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    expression           go to state 111
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 87

   47 mult_expr: SUB . multiplicative_expr mult_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    multiplicative_expr  go to state 112
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 88

   46 mult_expr: ADD . multiplicative_expr mult_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    multiplicative_expr  go to state 113
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 89

   45 expression: multiplicative_expr mult_expr .

    $default  reduce using rule 45 (expression)


State 90

   50 mult_expr_term: MULT . term mult_expr_term

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    term        go to state 114
    term_minus  go to state 58
    var         go to state 59


State 91

   51 mult_expr_term: DIV . term mult_expr_term

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    term        go to state 115
    term_minus  go to state 58
    var         go to state 59


State 92

   52 mult_expr_term: MOD . term mult_expr_term

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    term        go to state 116
    term_minus  go to state 58
    var         go to state 59


State 93

   49 multiplicative_expr: term mult_expr_term .

    $default  reduce using rule 49 (multiplicative_expr)


State 94

   17 statement: WHILE bool_exp BEGINLOOP . statement SEMICOLON statement_block ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 117
    var        go to state 42


State 95

   18 statement: DO BEGINLOOP statement . SEMICOLON statement_block ENDLOOP WHILE bool_exp

    SEMICOLON  shift, and go to state 118


State 96

   26 var_block: COMMA . var var_block

    IDENT  shift, and go to state 40

    var  go to state 119


State 97

   19 statement: READ var var_block .

    $default  reduce using rule 19 (statement)


State 98

   20 statement: WRITE var var_block .

    $default  reduce using rule 20 (statement)


State 99

   59 term_minus: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 107


State 100

   65 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 120


State 101

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block . END_BODY

    END_BODY  shift, and go to state 121


State 102

    8 statement_block: statement . SEMICOLON statement_block

    SEMICOLON  shift, and go to state 122


State 103

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 104

   60 exp_comma_block: expression . exp_comma_block2

    COMMA  shift, and go to state 123

    $default  reduce using rule 62 (exp_comma_block2)

    exp_comma_block2  go to state 124


State 105

   56 term: IDENT L_PAREN exp_comma_block . R_PAREN

    R_PAREN  shift, and go to state 125


State 106

   38 rel_expr: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 38 (rel_expr)


State 107

   59 term_minus: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term_minus)


State 108

   16 statement: IF bool_exp THEN statement . SEMICOLON statement_block else_block ENDIF

    SEMICOLON  shift, and go to state 126


State 109

   28 rel_or: OR relation_and_expr . rel_or

    OR  shift, and go to state 76

    $default  reduce using rule 29 (rel_or)

    rel_or  go to state 127


State 110

   31 rel_and: AND relation_and_expr .

    $default  reduce using rule 31 (rel_and)


State 111

   35 rel_expr: expression comp expression .

    $default  reduce using rule 35 (rel_expr)


State 112

   47 mult_expr: SUB multiplicative_expr . mult_expr

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 48 (mult_expr)

    mult_expr  go to state 128


State 113

   46 mult_expr: ADD multiplicative_expr . mult_expr

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 48 (mult_expr)

    mult_expr  go to state 129


State 114

   50 mult_expr_term: MULT term . mult_expr_term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 53 (mult_expr_term)

    mult_expr_term  go to state 130


State 115

   51 mult_expr_term: DIV term . mult_expr_term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 53 (mult_expr_term)

    mult_expr_term  go to state 131


State 116

   52 mult_expr_term: MOD term . mult_expr_term

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 53 (mult_expr_term)

    mult_expr_term  go to state 132


State 117

   17 statement: WHILE bool_exp BEGINLOOP statement . SEMICOLON statement_block ENDLOOP

    SEMICOLON  shift, and go to state 133


State 118

   18 statement: DO BEGINLOOP statement SEMICOLON . statement_block ENDLOOP WHILE bool_exp

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (statement_block)

    statement_block  go to state 134
    statement        go to state 102
    var              go to state 42


State 119

   26 var_block: COMMA var . var_block

    COMMA  shift, and go to state 96

    $default  reduce using rule 25 (var_block)

    var_block  go to state 135


State 120

   65 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 65 (var)


State 121

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY .

    $default  reduce using rule 4 (function)


State 122

    8 statement_block: statement SEMICOLON . statement_block

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (statement_block)

    statement_block  go to state 136
    statement        go to state 102
    var              go to state 42


State 123

   63 exp_comma_block2: COMMA . expression exp_comma_block2

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 64

    expression           go to state 137
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 124

   60 exp_comma_block: expression exp_comma_block2 .

    $default  reduce using rule 60 (exp_comma_block)


State 125

   56 term: IDENT L_PAREN exp_comma_block R_PAREN .

    $default  reduce using rule 56 (term)


State 126

   16 statement: IF bool_exp THEN statement SEMICOLON . statement_block else_block ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (statement_block)

    statement_block  go to state 138
    statement        go to state 102
    var              go to state 42


State 127

   28 rel_or: OR relation_and_expr rel_or .

    $default  reduce using rule 28 (rel_or)


State 128

   47 mult_expr: SUB multiplicative_expr mult_expr .

    $default  reduce using rule 47 (mult_expr)


State 129

   46 mult_expr: ADD multiplicative_expr mult_expr .

    $default  reduce using rule 46 (mult_expr)


State 130

   50 mult_expr_term: MULT term mult_expr_term .

    $default  reduce using rule 50 (mult_expr_term)


State 131

   51 mult_expr_term: DIV term mult_expr_term .

    $default  reduce using rule 51 (mult_expr_term)


State 132

   52 mult_expr_term: MOD term mult_expr_term .

    $default  reduce using rule 52 (mult_expr_term)


State 133

   17 statement: WHILE bool_exp BEGINLOOP statement SEMICOLON . statement_block ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (statement_block)

    statement_block  go to state 139
    statement        go to state 102
    var              go to state 42


State 134

   18 statement: DO BEGINLOOP statement SEMICOLON statement_block . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 140


State 135

   26 var_block: COMMA var var_block .

    $default  reduce using rule 26 (var_block)


State 136

    8 statement_block: statement SEMICOLON statement_block .

    $default  reduce using rule 8 (statement_block)


State 137

   63 exp_comma_block2: COMMA expression . exp_comma_block2

    COMMA  shift, and go to state 123

    $default  reduce using rule 62 (exp_comma_block2)

    exp_comma_block2  go to state 141


State 138

   16 statement: IF bool_exp THEN statement SEMICOLON statement_block . else_block ENDIF

    ELSE  shift, and go to state 142

    $default  reduce using rule 23 (else_block)

    else_block  go to state 143


State 139

   17 statement: WHILE bool_exp BEGINLOOP statement SEMICOLON statement_block . ENDLOOP

    ENDLOOP  shift, and go to state 144


State 140

   18 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 145


State 141

   63 exp_comma_block2: COMMA expression exp_comma_block2 .

    $default  reduce using rule 63 (exp_comma_block2)


State 142

   24 else_block: ELSE . statement SEMICOLON statement_block

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 146
    var        go to state 42


State 143

   16 statement: IF bool_exp THEN statement SEMICOLON statement_block else_block . ENDIF

    ENDIF  shift, and go to state 147


State 144

   17 statement: WHILE bool_exp BEGINLOOP statement SEMICOLON statement_block ENDLOOP .

    $default  reduce using rule 17 (statement)


State 145

   18 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 148
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    term_minus           go to state 58
    var                  go to state 59


State 146

   24 else_block: ELSE statement . SEMICOLON statement_block

    SEMICOLON  shift, and go to state 149


State 147

   16 statement: IF bool_exp THEN statement SEMICOLON statement_block else_block ENDIF .

    $default  reduce using rule 16 (statement)


State 148

   18 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 149

   24 else_block: ELSE statement SEMICOLON . statement_block

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (statement_block)

    statement_block  go to state 150
    statement        go to state 102
    var              go to state 42


State 150

   24 else_block: ELSE statement SEMICOLON statement_block .

    $default  reduce using rule 24 (else_block)
