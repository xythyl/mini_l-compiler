Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: start $end

    1 start: program

    2 program: /* empty */
    3        | function program

    4 $@1: /* empty */

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    6 declaration_block: /* empty */
    7                  | declaration SEMICOLON declaration_block

    8 statement_block: /* empty */
    9                | statement SEMICOLON statement_block

   10 declaration: IDENT comma_ident COLON INTEGER
   11            | IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 comma_ident: /* empty */
   13            | COMMA IDENT comma_ident

   14 statement: var ASSIGN expression
   15          | IF bool_expr THEN statement SEMICOLON statement_block else_block ENDIF
   16          | WHILE bool_expr BEGINLOOP statement SEMICOLON statement_block ENDLOOP
   17          | DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_expr
   18          | READ var var_block
   19          | WRITE var var_block
   20          | CONTINUE
   21          | RETURN expression

   22 else_block: /* empty */
   23           | ELSE statement SEMICOLON statement_block

   24 var_block: /* empty */
   25          | COMMA var var_block

   26 bool_expr: bool_expr OR relation_and_expr
   27          | relation_and_expr

   28 relation_and_expr: relation_and_expr AND relation_expr
   29                  | relation_expr

   30 relation_expr: rel_expr
   31              | NOT rel_expr

   32 rel_expr: expression comp expression
   33         | TRUE
   34         | FALSE
   35         | L_PAREN bool_expr R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expression: expression ADD multiplicative_expr
   43           | expression SUB multiplicative_expr
   44           | multiplicative_expr

   45 multiplicative_expr: multiplicative_expr MULT term
   46                    | multiplicative_expr DIV term
   47                    | multiplicative_expr MOD term
   48                    | term

   49 term: SUB var
   50     | var
   51     | SUB NUMBER
   52     | NUMBER
   53     | SUB L_PAREN expression R_PAREN
   54     | L_PAREN expression R_PAREN
   55     | IDENT L_PAREN exp_comma_block R_PAREN
   56     | IDENT L_PAREN R_PAREN

   57 exp_comma_block: expression
   58                | expression COMMA exp_comma_block

   59 var: IDENT
   60    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 10 11
ARRAY (266) 11
OF (267) 11
IF (268) 15
THEN (269) 15
ENDIF (270) 15
ELSE (271) 23
WHILE (272) 16 17
DO (273) 17
BEGINLOOP (274) 16 17
ENDLOOP (275) 16 17
CONTINUE (276) 20
READ (277) 18
WRITE (278) 19
AND (279) 28
OR (280) 26
NOT (281) 31
TRUE (282) 33
FALSE (283) 34
RETURN (284) 21
NUMBER (285) 11 51 52
IDENT (286) 5 10 11 13 55 56 59 60
SUB (287) 43 49 51 53
ADD (288) 42
MULT (289) 45
DIV (290) 46
MOD (291) 47
UMINUS (292)
EQ (293) 36
NEQ (294) 37
LT (295) 38
GT (296) 39
LTE (297) 40
GTE (298) 41
SEMICOLON (299) 5 7 9 15 16 17 23
COLON (300) 10 11
COMMA (301) 13 25 58
L_PAREN (302) 35 53 54 55 56
R_PAREN (303) 35 53 54 55 56
L_SQUARE_BRACKET (304) 11 60
R_SQUARE_BRACKET (305) 11 60
ASSIGN (306) 14


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
start (53)
    on left: 1, on right: 0
program (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 5, on right: 3
$@1 (56)
    on left: 4, on right: 5
declaration_block (57)
    on left: 6 7, on right: 5 7
statement_block (58)
    on left: 8 9, on right: 5 9 15 16 17 23
declaration (59)
    on left: 10 11, on right: 7
comma_ident (60)
    on left: 12 13, on right: 10 11 13
statement (61)
    on left: 14 15 16 17 18 19 20 21, on right: 5 9 15 16 17 23
else_block (62)
    on left: 22 23, on right: 15
var_block (63)
    on left: 24 25, on right: 18 19 25
bool_expr (64)
    on left: 26 27, on right: 15 16 17 26 35
relation_and_expr (65)
    on left: 28 29, on right: 26 27 28
relation_expr (66)
    on left: 30 31, on right: 28 29
rel_expr (67)
    on left: 32 33 34 35, on right: 30 31
comp (68)
    on left: 36 37 38 39 40 41, on right: 32
expression (69)
    on left: 42 43 44, on right: 14 21 32 42 43 53 54 57 58 60
multiplicative_expr (70)
    on left: 45 46 47 48, on right: 42 43 44 45 46 47
term (71)
    on left: 49 50 51 52 53 54 55 56, on right: 45 46 47 48
exp_comma_block (72)
    on left: 57 58, on right: 55 58
var (73)
    on left: 59 60, on right: 14 18 19 25 49 50


State 0

    0 $accept: . start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    start     go to state 2
    program   go to state 3
    function  go to state 4


State 1

    5 function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: start . $end

    $end  shift, and go to state 6


State 3

    1 start: program .

    $default  reduce using rule 1 (start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    5 function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: start $end .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    5 function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    SEMICOLON  shift, and go to state 9


State 9

    5 function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declaration_block)

    declaration_block  go to state 12
    declaration        go to state 13


State 11

   10 declaration: IDENT . comma_ident COLON INTEGER
   11            | IDENT . comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 14

    $default  reduce using rule 12 (comma_ident)

    comma_ident  go to state 15


State 12

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block . END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    7 declaration_block: declaration . SEMICOLON declaration_block

    SEMICOLON  shift, and go to state 17


State 14

   13 comma_ident: COMMA . IDENT comma_ident

    IDENT  shift, and go to state 18


State 15

   10 declaration: IDENT comma_ident . COLON INTEGER
   11            | IDENT comma_ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS . BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declaration_block: declaration SEMICOLON . declaration_block

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declaration_block)

    declaration_block  go to state 21
    declaration        go to state 13


State 18

   13 comma_ident: COMMA IDENT . comma_ident

    COMMA  shift, and go to state 14

    $default  reduce using rule 12 (comma_ident)

    comma_ident  go to state 22


State 19

   10 declaration: IDENT comma_ident COLON . INTEGER
   11            | IDENT comma_ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS . declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declaration_block)

    declaration_block  go to state 25
    declaration        go to state 13


State 21

    7 declaration_block: declaration SEMICOLON declaration_block .

    $default  reduce using rule 7 (declaration_block)


State 22

   13 comma_ident: COMMA IDENT comma_ident .

    $default  reduce using rule 13 (comma_ident)


State 23

   10 declaration: IDENT comma_ident COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   11 declaration: IDENT comma_ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 25

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block . END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   11 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS . BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   11 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY . statement SEMICOLON statement_block END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 39
    var        go to state 40


State 30

   11 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 31

   15 statement: IF . bool_expr THEN statement SEMICOLON statement_block else_block ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 49
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    rel_expr             go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 32

   16 statement: WHILE . bool_expr BEGINLOOP statement SEMICOLON statement_block ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 57
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    rel_expr             go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 33

   17 statement: DO . BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 58


State 34

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 35

   18 statement: READ . var var_block

    IDENT  shift, and go to state 38

    var  go to state 59


State 36

   19 statement: WRITE . var var_block

    IDENT  shift, and go to state 38

    var  go to state 60


State 37

   21 statement: RETURN . expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 62
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 38

   59 var: IDENT .
   60    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 63

    $default  reduce using rule 59 (var)


State 39

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement . SEMICOLON statement_block END_BODY

    SEMICOLON  shift, and go to state 64


State 40

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 65


State 41

   11 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 66


State 42

   31 relation_expr: NOT . rel_expr

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    rel_expr             go to state 67
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 43

   33 rel_expr: TRUE .

    $default  reduce using rule 33 (rel_expr)


State 44

   34 rel_expr: FALSE .

    $default  reduce using rule 34 (rel_expr)


State 45

   52 term: NUMBER .

    $default  reduce using rule 52 (term)


State 46

   55 term: IDENT . L_PAREN exp_comma_block R_PAREN
   56     | IDENT . L_PAREN R_PAREN
   59 var: IDENT .
   60    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 68
    L_SQUARE_BRACKET  shift, and go to state 63

    $default  reduce using rule 59 (var)


State 47

   49 term: SUB . var
   51     | SUB . NUMBER
   53     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 69
    IDENT    shift, and go to state 38
    L_PAREN  shift, and go to state 70

    var  go to state 71


State 48

   35 rel_expr: L_PAREN . bool_expr R_PAREN
   54 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 72
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    rel_expr             go to state 52
    expression           go to state 73
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 49

   15 statement: IF bool_expr . THEN statement SEMICOLON statement_block else_block ENDIF
   26 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 74
    OR    shift, and go to state 75


State 50

   27 bool_expr: relation_and_expr .
   28 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 76

    $default  reduce using rule 27 (bool_expr)


State 51

   29 relation_and_expr: relation_expr .

    $default  reduce using rule 29 (relation_and_expr)


State 52

   30 relation_expr: rel_expr .

    $default  reduce using rule 30 (relation_expr)


State 53

   32 rel_expr: expression . comp expression
   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 77
    ADD  shift, and go to state 78
    EQ   shift, and go to state 79
    NEQ  shift, and go to state 80
    LT   shift, and go to state 81
    GT   shift, and go to state 82
    LTE  shift, and go to state 83
    GTE  shift, and go to state 84

    comp  go to state 85


State 54

   44 expression: multiplicative_expr .
   45 multiplicative_expr: multiplicative_expr . MULT term
   46                    | multiplicative_expr . DIV term
   47                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 44 (expression)


State 55

   48 multiplicative_expr: term .

    $default  reduce using rule 48 (multiplicative_expr)


State 56

   50 term: var .

    $default  reduce using rule 50 (term)


State 57

   16 statement: WHILE bool_expr . BEGINLOOP statement SEMICOLON statement_block ENDLOOP
   26 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 89
    OR         shift, and go to state 75


State 58

   17 statement: DO BEGINLOOP . statement SEMICOLON statement_block ENDLOOP WHILE bool_expr

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 90
    var        go to state 40


State 59

   18 statement: READ var . var_block

    COMMA  shift, and go to state 91

    $default  reduce using rule 24 (var_block)

    var_block  go to state 92


State 60

   19 statement: WRITE var . var_block

    COMMA  shift, and go to state 91

    $default  reduce using rule 24 (var_block)

    var_block  go to state 93


State 61

   54 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 94
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 62

   21 statement: RETURN expression .
   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 77
    ADD  shift, and go to state 78

    $default  reduce using rule 21 (statement)


State 63

   60 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 95
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 64

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON . statement_block END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 8 (statement_block)

    statement_block  go to state 96
    statement        go to state 97
    var              go to state 40


State 65

   14 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 98
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 66

   11 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 67

   31 relation_expr: NOT rel_expr .

    $default  reduce using rule 31 (relation_expr)


State 68

   55 term: IDENT L_PAREN . exp_comma_block R_PAREN
   56     | IDENT L_PAREN . R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61
    R_PAREN  shift, and go to state 99

    expression           go to state 100
    multiplicative_expr  go to state 54
    term                 go to state 55
    exp_comma_block      go to state 101
    var                  go to state 56


State 69

   51 term: SUB NUMBER .

    $default  reduce using rule 51 (term)


State 70

   53 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 102
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 71

   49 term: SUB var .

    $default  reduce using rule 49 (term)


State 72

   26 bool_expr: bool_expr . OR relation_and_expr
   35 rel_expr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 75
    R_PAREN  shift, and go to state 103


State 73

   32 rel_expr: expression . comp expression
   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr
   54 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 77
    ADD      shift, and go to state 78
    EQ       shift, and go to state 79
    NEQ      shift, and go to state 80
    LT       shift, and go to state 81
    GT       shift, and go to state 82
    LTE      shift, and go to state 83
    GTE      shift, and go to state 84
    R_PAREN  shift, and go to state 104

    comp  go to state 85


State 74

   15 statement: IF bool_expr THEN . statement SEMICOLON statement_block else_block ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 105
    var        go to state 40


State 75

   26 bool_expr: bool_expr OR . relation_and_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    relation_and_expr    go to state 106
    relation_expr        go to state 51
    rel_expr             go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 76

   28 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    relation_expr        go to state 107
    rel_expr             go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 77

   43 expression: expression SUB . multiplicative_expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    multiplicative_expr  go to state 108
    term                 go to state 55
    var                  go to state 56


State 78

   42 expression: expression ADD . multiplicative_expr

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    multiplicative_expr  go to state 109
    term                 go to state 55
    var                  go to state 56


State 79

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


State 80

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


State 81

   38 comp: LT .

    $default  reduce using rule 38 (comp)


State 82

   39 comp: GT .

    $default  reduce using rule 39 (comp)


State 83

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


State 84

   41 comp: GTE .

    $default  reduce using rule 41 (comp)


State 85

   32 rel_expr: expression comp . expression

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 110
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 86

   45 multiplicative_expr: multiplicative_expr MULT . term

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    term  go to state 111
    var   go to state 56


State 87

   46 multiplicative_expr: multiplicative_expr DIV . term

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    term  go to state 112
    var   go to state 56


State 88

   47 multiplicative_expr: multiplicative_expr MOD . term

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    term  go to state 113
    var   go to state 56


State 89

   16 statement: WHILE bool_expr BEGINLOOP . statement SEMICOLON statement_block ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 114
    var        go to state 40


State 90

   17 statement: DO BEGINLOOP statement . SEMICOLON statement_block ENDLOOP WHILE bool_expr

    SEMICOLON  shift, and go to state 115


State 91

   25 var_block: COMMA . var var_block

    IDENT  shift, and go to state 38

    var  go to state 116


State 92

   18 statement: READ var var_block .

    $default  reduce using rule 18 (statement)


State 93

   19 statement: WRITE var var_block .

    $default  reduce using rule 19 (statement)


State 94

   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr
   54 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 77
    ADD      shift, and go to state 78
    R_PAREN  shift, and go to state 104


State 95

   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr
   60 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    SUB               shift, and go to state 77
    ADD               shift, and go to state 78
    R_SQUARE_BRACKET  shift, and go to state 117


State 96

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block . END_BODY

    END_BODY  shift, and go to state 118


State 97

    9 statement_block: statement . SEMICOLON statement_block

    SEMICOLON  shift, and go to state 119


State 98

   14 statement: var ASSIGN expression .
   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 77
    ADD  shift, and go to state 78

    $default  reduce using rule 14 (statement)


State 99

   56 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 56 (term)


State 100

   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr
   57 exp_comma_block: expression .
   58                | expression . COMMA exp_comma_block

    SUB    shift, and go to state 77
    ADD    shift, and go to state 78
    COMMA  shift, and go to state 120

    $default  reduce using rule 57 (exp_comma_block)


State 101

   55 term: IDENT L_PAREN exp_comma_block . R_PAREN

    R_PAREN  shift, and go to state 121


State 102

   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr
   53 term: SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 77
    ADD      shift, and go to state 78
    R_PAREN  shift, and go to state 122


State 103

   35 rel_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 35 (rel_expr)


State 104

   54 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 54 (term)


State 105

   15 statement: IF bool_expr THEN statement . SEMICOLON statement_block else_block ENDIF

    SEMICOLON  shift, and go to state 123


State 106

   26 bool_expr: bool_expr OR relation_and_expr .
   28 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 76

    $default  reduce using rule 26 (bool_expr)


State 107

   28 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 28 (relation_and_expr)


State 108

   43 expression: expression SUB multiplicative_expr .
   45 multiplicative_expr: multiplicative_expr . MULT term
   46                    | multiplicative_expr . DIV term
   47                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 43 (expression)


State 109

   42 expression: expression ADD multiplicative_expr .
   45 multiplicative_expr: multiplicative_expr . MULT term
   46                    | multiplicative_expr . DIV term
   47                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 86
    DIV   shift, and go to state 87
    MOD   shift, and go to state 88

    $default  reduce using rule 42 (expression)


State 110

   32 rel_expr: expression comp expression .
   42 expression: expression . ADD multiplicative_expr
   43           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 77
    ADD  shift, and go to state 78

    $default  reduce using rule 32 (rel_expr)


State 111

   45 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 45 (multiplicative_expr)


State 112

   46 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 46 (multiplicative_expr)


State 113

   47 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 47 (multiplicative_expr)


State 114

   16 statement: WHILE bool_expr BEGINLOOP statement . SEMICOLON statement_block ENDLOOP

    SEMICOLON  shift, and go to state 124


State 115

   17 statement: DO BEGINLOOP statement SEMICOLON . statement_block ENDLOOP WHILE bool_expr

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 8 (statement_block)

    statement_block  go to state 125
    statement        go to state 97
    var              go to state 40


State 116

   25 var_block: COMMA var . var_block

    COMMA  shift, and go to state 91

    $default  reduce using rule 24 (var_block)

    var_block  go to state 126


State 117

   60 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (var)


State 118

    5 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY .

    $default  reduce using rule 5 (function)


State 119

    9 statement_block: statement SEMICOLON . statement_block

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 8 (statement_block)

    statement_block  go to state 127
    statement        go to state 97
    var              go to state 40


State 120

   58 exp_comma_block: expression COMMA . exp_comma_block

    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 61

    expression           go to state 100
    multiplicative_expr  go to state 54
    term                 go to state 55
    exp_comma_block      go to state 128
    var                  go to state 56


State 121

   55 term: IDENT L_PAREN exp_comma_block R_PAREN .

    $default  reduce using rule 55 (term)


State 122

   53 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 53 (term)


State 123

   15 statement: IF bool_expr THEN statement SEMICOLON . statement_block else_block ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 8 (statement_block)

    statement_block  go to state 129
    statement        go to state 97
    var              go to state 40


State 124

   16 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON . statement_block ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 8 (statement_block)

    statement_block  go to state 130
    statement        go to state 97
    var              go to state 40


State 125

   17 statement: DO BEGINLOOP statement SEMICOLON statement_block . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 131


State 126

   25 var_block: COMMA var var_block .

    $default  reduce using rule 25 (var_block)


State 127

    9 statement_block: statement SEMICOLON statement_block .

    $default  reduce using rule 9 (statement_block)


State 128

   58 exp_comma_block: expression COMMA exp_comma_block .

    $default  reduce using rule 58 (exp_comma_block)


State 129

   15 statement: IF bool_expr THEN statement SEMICOLON statement_block . else_block ENDIF

    ELSE  shift, and go to state 132

    $default  reduce using rule 22 (else_block)

    else_block  go to state 133


State 130

   16 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statement_block . ENDLOOP

    ENDLOOP  shift, and go to state 134


State 131

   17 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 135


State 132

   23 else_block: ELSE . statement SEMICOLON statement_block

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 136
    var        go to state 40


State 133

   15 statement: IF bool_expr THEN statement SEMICOLON statement_block else_block . ENDIF

    ENDIF  shift, and go to state 137


State 134

   16 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statement_block ENDLOOP .

    $default  reduce using rule 16 (statement)


State 135

   17 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    NUMBER   shift, and go to state 45
    IDENT    shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 138
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    rel_expr             go to state 52
    expression           go to state 53
    multiplicative_expr  go to state 54
    term                 go to state 55
    var                  go to state 56


State 136

   23 else_block: ELSE statement . SEMICOLON statement_block

    SEMICOLON  shift, and go to state 139


State 137

   15 statement: IF bool_expr THEN statement SEMICOLON statement_block else_block ENDIF .

    $default  reduce using rule 15 (statement)


State 138

   17 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_expr .
   26 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 75

    $default  reduce using rule 17 (statement)


State 139

   23 else_block: ELSE statement SEMICOLON . statement_block

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 8 (statement_block)

    statement_block  go to state 140
    statement        go to state 97
    var              go to state 40


State 140

   23 else_block: ELSE statement SEMICOLON statement_block .

    $default  reduce using rule 23 (else_block)
