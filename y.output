Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: start $end

    1 start: program

    2 program: /* empty */
    3        | function program

    4 $@1: /* empty */

    5 $@2: /* empty */

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    7 declaration_block: /* empty */
    8                  | declaration SEMICOLON declaration_block

    9 statement_block: /* empty */
   10                | statement SEMICOLON statement_block

   11 declaration: IDENT comma_ident COLON INTEGER
   12            | IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   13 comma_ident: /* empty */
   14            | COMMA IDENT comma_ident

   15 statement: var ASSIGN expression

   16 $@3: /* empty */

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_block else_block ENDIF

   18 $@4: /* empty */

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON statement_block ENDLOOP
   20          | DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_expr
   21          | READ var var_block
   22          | WRITE var var_block
   23          | CONTINUE
   24          | RETURN expression

   25 else_block: /* empty */

   26 $@5: /* empty */

   27 else_block: ELSE $@5 statement SEMICOLON statement_block

   28 var_block: /* empty */
   29          | COMMA var var_block

   30 bool_expr: bool_expr OR relation_and_expr
   31          | relation_and_expr

   32 relation_and_expr: relation_and_expr AND relation_expr
   33                  | relation_expr

   34 relation_expr: rel_expr
   35              | NOT rel_expr

   36 rel_expr: expression comp expression
   37         | TRUE
   38         | FALSE
   39         | L_PAREN bool_expr R_PAREN

   40 comp: EQ
   41     | NEQ
   42     | LT
   43     | GT
   44     | LTE
   45     | GTE

   46 expression: expression ADD multiplicative_expr
   47           | expression SUB multiplicative_expr
   48           | multiplicative_expr

   49 multiplicative_expr: multiplicative_expr MULT term
   50                    | multiplicative_expr DIV term
   51                    | multiplicative_expr MOD term
   52                    | term

   53 term: SUB var
   54     | var
   55     | SUB NUMBER
   56     | NUMBER
   57     | SUB L_PAREN expression R_PAREN
   58     | L_PAREN expression R_PAREN
   59     | IDENT L_PAREN expression exp_comma_block R_PAREN
   60     | IDENT L_PAREN R_PAREN

   61 exp_comma_block: COMMA expression exp_comma_block
   62                | /* empty */

   63 var: IDENT
   64    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 6
BEGIN_PARAMS (259) 6
END_PARAMS (260) 6
BEGIN_LOCALS (261) 6
END_LOCALS (262) 6
BEGIN_BODY (263) 6
END_BODY (264) 6
INTEGER (265) 11 12
ARRAY (266) 12
OF (267) 12
IF (268) 17
THEN (269) 17
ENDIF (270) 17
ELSE (271) 27
WHILE (272) 19 20
DO (273) 20
BEGINLOOP (274) 19 20
ENDLOOP (275) 19 20
CONTINUE (276) 23
READ (277) 21
WRITE (278) 22
AND (279) 32
OR (280) 30
NOT (281) 35
TRUE (282) 37
FALSE (283) 38
RETURN (284) 24
NUMBER (285) 12 55 56
IDENT (286) 6 11 12 14 59 60 63 64
SUB (287) 47 53 55 57
ADD (288) 46
MULT (289) 49
DIV (290) 50
MOD (291) 51
UMINUS (292)
EQ (293) 40
NEQ (294) 41
LT (295) 42
GT (296) 43
LTE (297) 44
GTE (298) 45
SEMICOLON (299) 6 8 10 17 19 20 27
COLON (300) 11 12
COMMA (301) 14 29 61
L_PAREN (302) 39 57 58 59 60
R_PAREN (303) 39 57 58 59 60
L_SQUARE_BRACKET (304) 12 64
R_SQUARE_BRACKET (305) 12 64
ASSIGN (306) 15


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
start (53)
    on left: 1, on right: 0
program (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 6, on right: 3
$@1 (56)
    on left: 4, on right: 6
$@2 (57)
    on left: 5, on right: 6
declaration_block (58)
    on left: 7 8, on right: 6 8
statement_block (59)
    on left: 9 10, on right: 6 10 17 19 20 27
declaration (60)
    on left: 11 12, on right: 8
comma_ident (61)
    on left: 13 14, on right: 11 12 14
statement (62)
    on left: 15 17 19 20 21 22 23 24, on right: 6 10 17 19 20 27
$@3 (63)
    on left: 16, on right: 17
$@4 (64)
    on left: 18, on right: 19
else_block (65)
    on left: 25 27, on right: 17
$@5 (66)
    on left: 26, on right: 27
var_block (67)
    on left: 28 29, on right: 21 22 29
bool_expr (68)
    on left: 30 31, on right: 17 19 20 30 39
relation_and_expr (69)
    on left: 32 33, on right: 30 31 32
relation_expr (70)
    on left: 34 35, on right: 32 33
rel_expr (71)
    on left: 36 37 38 39, on right: 34 35
comp (72)
    on left: 40 41 42 43 44 45, on right: 36
expression (73)
    on left: 46 47 48, on right: 15 24 36 46 47 57 58 59 61 64
multiplicative_expr (74)
    on left: 49 50 51 52, on right: 46 47 48 49 50 51
term (75)
    on left: 53 54 55 56 57 58 59 60, on right: 49 50 51 52
exp_comma_block (76)
    on left: 61 62, on right: 59 61
var (77)
    on left: 63 64, on right: 15 21 22 29 53 54


State 0

    0 $accept: . start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    start     go to state 2
    program   go to state 3
    function  go to state 4


State 1

    6 function: FUNCTION . IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: start . $end

    $end  shift, and go to state 6


State 3

    1 start: program .

    $default  reduce using rule 1 (start)


State 4

    3 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 7
    function  go to state 4


State 5

    6 function: FUNCTION IDENT . $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: start $end .

    $default  accept


State 7

    3 program: function program .

    $default  reduce using rule 3 (program)


State 8

    6 function: FUNCTION IDENT $@1 . SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    SEMICOLON  shift, and go to state 9


State 9

    6 function: FUNCTION IDENT $@1 SEMICOLON . BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS . declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declaration_block)

    declaration_block  go to state 12
    declaration        go to state 13


State 11

   11 declaration: IDENT . comma_ident COLON INTEGER
   12            | IDENT . comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 14

    $default  reduce using rule 13 (comma_ident)

    comma_ident  go to state 15


State 12

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block . $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    $default  reduce using rule 5 ($@2)

    $@2  go to state 16


State 13

    8 declaration_block: declaration . SEMICOLON declaration_block

    SEMICOLON  shift, and go to state 17


State 14

   14 comma_ident: COMMA . IDENT comma_ident

    IDENT  shift, and go to state 18


State 15

   11 declaration: IDENT comma_ident . COLON INTEGER
   12            | IDENT comma_ident . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 . END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    END_PARAMS  shift, and go to state 20


State 17

    8 declaration_block: declaration SEMICOLON . declaration_block

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declaration_block)

    declaration_block  go to state 21
    declaration        go to state 13


State 18

   14 comma_ident: COMMA IDENT . comma_ident

    COMMA  shift, and go to state 14

    $default  reduce using rule 13 (comma_ident)

    comma_ident  go to state 22


State 19

   11 declaration: IDENT comma_ident COLON . INTEGER
   12            | IDENT comma_ident COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS . BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_LOCALS  shift, and go to state 25


State 21

    8 declaration_block: declaration SEMICOLON declaration_block .

    $default  reduce using rule 8 (declaration_block)


State 22

   14 comma_ident: COMMA IDENT comma_ident .

    $default  reduce using rule 14 (comma_ident)


State 23

   11 declaration: IDENT comma_ident COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 24

   12 declaration: IDENT comma_ident COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 25

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS . declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 7 (declaration_block)

    declaration_block  go to state 27
    declaration        go to state 13


State 26

   12 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block . END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   12 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS . BEGIN_BODY statement SEMICOLON statement_block END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   12 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 32


State 31

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY . statement SEMICOLON statement_block END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 41
    var        go to state 42


State 32

   12 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 43


State 33

   17 statement: IF . bool_expr THEN $@3 statement SEMICOLON statement_block else_block ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_expr            go to state 51
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 34

   19 statement: WHILE . bool_expr BEGINLOOP $@4 statement SEMICOLON statement_block ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_expr            go to state 59
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 35

   20 statement: DO . BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 60


State 36

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 37

   21 statement: READ . var var_block

    IDENT  shift, and go to state 40

    var  go to state 61


State 38

   22 statement: WRITE . var var_block

    IDENT  shift, and go to state 40

    var  go to state 62


State 39

   24 statement: RETURN . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 64
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 40

   63 var: IDENT .
   64    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 63 (var)


State 41

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement . SEMICOLON statement_block END_BODY

    SEMICOLON  shift, and go to state 66


State 42

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 67


State 43

   12 declaration: IDENT comma_ident COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 44

   35 relation_expr: NOT . rel_expr

    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    rel_expr             go to state 68
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 45

   37 rel_expr: TRUE .

    $default  reduce using rule 37 (rel_expr)


State 46

   38 rel_expr: FALSE .

    $default  reduce using rule 38 (rel_expr)


State 47

   56 term: NUMBER .

    $default  reduce using rule 56 (term)


State 48

   59 term: IDENT . L_PAREN expression exp_comma_block R_PAREN
   60     | IDENT . L_PAREN R_PAREN
   63 var: IDENT .
   64    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 69
    L_SQUARE_BRACKET  shift, and go to state 65

    $default  reduce using rule 63 (var)


State 49

   53 term: SUB . var
   55     | SUB . NUMBER
   57     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 70
    IDENT    shift, and go to state 40
    L_PAREN  shift, and go to state 71

    var  go to state 72


State 50

   39 rel_expr: L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_expr            go to state 73
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 74
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 51

   17 statement: IF bool_expr . THEN $@3 statement SEMICOLON statement_block else_block ENDIF
   30 bool_expr: bool_expr . OR relation_and_expr

    THEN  shift, and go to state 75
    OR    shift, and go to state 76


State 52

   31 bool_expr: relation_and_expr .
   32 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 77

    $default  reduce using rule 31 (bool_expr)


State 53

   33 relation_and_expr: relation_expr .

    $default  reduce using rule 33 (relation_and_expr)


State 54

   34 relation_expr: rel_expr .

    $default  reduce using rule 34 (relation_expr)


State 55

   36 rel_expr: expression . comp expression
   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79
    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 56

   48 expression: multiplicative_expr .
   49 multiplicative_expr: multiplicative_expr . MULT term
   50                    | multiplicative_expr . DIV term
   51                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 48 (expression)


State 57

   52 multiplicative_expr: term .

    $default  reduce using rule 52 (multiplicative_expr)


State 58

   54 term: var .

    $default  reduce using rule 54 (term)


State 59

   19 statement: WHILE bool_expr . BEGINLOOP $@4 statement SEMICOLON statement_block ENDLOOP
   30 bool_expr: bool_expr . OR relation_and_expr

    BEGINLOOP  shift, and go to state 90
    OR         shift, and go to state 76


State 60

   20 statement: DO BEGINLOOP . statement SEMICOLON statement_block ENDLOOP WHILE bool_expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 91
    var        go to state 42


State 61

   21 statement: READ var . var_block

    COMMA  shift, and go to state 92

    $default  reduce using rule 28 (var_block)

    var_block  go to state 93


State 62

   22 statement: WRITE var . var_block

    COMMA  shift, and go to state 92

    $default  reduce using rule 28 (var_block)

    var_block  go to state 94


State 63

   58 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 95
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 64

   24 statement: RETURN expression .
   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 24 (statement)


State 65

   64 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 96
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 66

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON . statement_block END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 9 (statement_block)

    statement_block  go to state 97
    statement        go to state 98
    var              go to state 42


State 67

   15 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 99
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 68

   35 relation_expr: NOT rel_expr .

    $default  reduce using rule 35 (relation_expr)


State 69

   59 term: IDENT L_PAREN . expression exp_comma_block R_PAREN
   60     | IDENT L_PAREN . R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63
    R_PAREN  shift, and go to state 100

    expression           go to state 101
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 70

   55 term: SUB NUMBER .

    $default  reduce using rule 55 (term)


State 71

   57 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 102
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 72

   53 term: SUB var .

    $default  reduce using rule 53 (term)


State 73

   30 bool_expr: bool_expr . OR relation_and_expr
   39 rel_expr: L_PAREN bool_expr . R_PAREN

    OR       shift, and go to state 76
    R_PAREN  shift, and go to state 103


State 74

   36 rel_expr: expression . comp expression
   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr
   58 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 78
    ADD      shift, and go to state 79
    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85
    R_PAREN  shift, and go to state 104

    comp  go to state 86


State 75

   17 statement: IF bool_expr THEN . $@3 statement SEMICOLON statement_block else_block ENDIF

    $default  reduce using rule 16 ($@3)

    $@3  go to state 105


State 76

   30 bool_expr: bool_expr OR . relation_and_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    relation_and_expr    go to state 106
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 77

   32 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    relation_expr        go to state 107
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 78

   47 expression: expression SUB . multiplicative_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    multiplicative_expr  go to state 108
    term                 go to state 57
    var                  go to state 58


State 79

   46 expression: expression ADD . multiplicative_expr

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    multiplicative_expr  go to state 109
    term                 go to state 57
    var                  go to state 58


State 80

   40 comp: EQ .

    $default  reduce using rule 40 (comp)


State 81

   41 comp: NEQ .

    $default  reduce using rule 41 (comp)


State 82

   42 comp: LT .

    $default  reduce using rule 42 (comp)


State 83

   43 comp: GT .

    $default  reduce using rule 43 (comp)


State 84

   44 comp: LTE .

    $default  reduce using rule 44 (comp)


State 85

   45 comp: GTE .

    $default  reduce using rule 45 (comp)


State 86

   36 rel_expr: expression comp . expression

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 110
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 87

   49 multiplicative_expr: multiplicative_expr MULT . term

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    term  go to state 111
    var   go to state 58


State 88

   50 multiplicative_expr: multiplicative_expr DIV . term

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    term  go to state 112
    var   go to state 58


State 89

   51 multiplicative_expr: multiplicative_expr MOD . term

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    term  go to state 113
    var   go to state 58


State 90

   19 statement: WHILE bool_expr BEGINLOOP . $@4 statement SEMICOLON statement_block ENDLOOP

    $default  reduce using rule 18 ($@4)

    $@4  go to state 114


State 91

   20 statement: DO BEGINLOOP statement . SEMICOLON statement_block ENDLOOP WHILE bool_expr

    SEMICOLON  shift, and go to state 115


State 92

   29 var_block: COMMA . var var_block

    IDENT  shift, and go to state 40

    var  go to state 116


State 93

   21 statement: READ var var_block .

    $default  reduce using rule 21 (statement)


State 94

   22 statement: WRITE var var_block .

    $default  reduce using rule 22 (statement)


State 95

   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr
   58 term: L_PAREN expression . R_PAREN

    SUB      shift, and go to state 78
    ADD      shift, and go to state 79
    R_PAREN  shift, and go to state 104


State 96

   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr
   64 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    SUB               shift, and go to state 78
    ADD               shift, and go to state 79
    R_SQUARE_BRACKET  shift, and go to state 117


State 97

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block . END_BODY

    END_BODY  shift, and go to state 118


State 98

   10 statement_block: statement . SEMICOLON statement_block

    SEMICOLON  shift, and go to state 119


State 99

   15 statement: var ASSIGN expression .
   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 15 (statement)


State 100

   60 term: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 60 (term)


State 101

   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr
   59 term: IDENT L_PAREN expression . exp_comma_block R_PAREN

    SUB    shift, and go to state 78
    ADD    shift, and go to state 79
    COMMA  shift, and go to state 120

    $default  reduce using rule 62 (exp_comma_block)

    exp_comma_block  go to state 121


State 102

   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr
   57 term: SUB L_PAREN expression . R_PAREN

    SUB      shift, and go to state 78
    ADD      shift, and go to state 79
    R_PAREN  shift, and go to state 122


State 103

   39 rel_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 39 (rel_expr)


State 104

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 105

   17 statement: IF bool_expr THEN $@3 . statement SEMICOLON statement_block else_block ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 123
    var        go to state 42


State 106

   30 bool_expr: bool_expr OR relation_and_expr .
   32 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 77

    $default  reduce using rule 30 (bool_expr)


State 107

   32 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 32 (relation_and_expr)


State 108

   47 expression: expression SUB multiplicative_expr .
   49 multiplicative_expr: multiplicative_expr . MULT term
   50                    | multiplicative_expr . DIV term
   51                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 47 (expression)


State 109

   46 expression: expression ADD multiplicative_expr .
   49 multiplicative_expr: multiplicative_expr . MULT term
   50                    | multiplicative_expr . DIV term
   51                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 87
    DIV   shift, and go to state 88
    MOD   shift, and go to state 89

    $default  reduce using rule 46 (expression)


State 110

   36 rel_expr: expression comp expression .
   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr

    SUB  shift, and go to state 78
    ADD  shift, and go to state 79

    $default  reduce using rule 36 (rel_expr)


State 111

   49 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 49 (multiplicative_expr)


State 112

   50 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 50 (multiplicative_expr)


State 113

   51 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 51 (multiplicative_expr)


State 114

   19 statement: WHILE bool_expr BEGINLOOP $@4 . statement SEMICOLON statement_block ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 124
    var        go to state 42


State 115

   20 statement: DO BEGINLOOP statement SEMICOLON . statement_block ENDLOOP WHILE bool_expr

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 9 (statement_block)

    statement_block  go to state 125
    statement        go to state 98
    var              go to state 42


State 116

   29 var_block: COMMA var . var_block

    COMMA  shift, and go to state 92

    $default  reduce using rule 28 (var_block)

    var_block  go to state 126


State 117

   64 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 118

    6 function: FUNCTION IDENT $@1 SEMICOLON BEGIN_PARAMS declaration_block $@2 END_PARAMS BEGIN_LOCALS declaration_block END_LOCALS BEGIN_BODY statement SEMICOLON statement_block END_BODY .

    $default  reduce using rule 6 (function)


State 119

   10 statement_block: statement SEMICOLON . statement_block

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 9 (statement_block)

    statement_block  go to state 127
    statement        go to state 98
    var              go to state 42


State 120

   61 exp_comma_block: COMMA . expression exp_comma_block

    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 63

    expression           go to state 128
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 121

   59 term: IDENT L_PAREN expression exp_comma_block . R_PAREN

    R_PAREN  shift, and go to state 129


State 122

   57 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


State 123

   17 statement: IF bool_expr THEN $@3 statement . SEMICOLON statement_block else_block ENDIF

    SEMICOLON  shift, and go to state 130


State 124

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement . SEMICOLON statement_block ENDLOOP

    SEMICOLON  shift, and go to state 131


State 125

   20 statement: DO BEGINLOOP statement SEMICOLON statement_block . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 132


State 126

   29 var_block: COMMA var var_block .

    $default  reduce using rule 29 (var_block)


State 127

   10 statement_block: statement SEMICOLON statement_block .

    $default  reduce using rule 10 (statement_block)


State 128

   46 expression: expression . ADD multiplicative_expr
   47           | expression . SUB multiplicative_expr
   61 exp_comma_block: COMMA expression . exp_comma_block

    SUB    shift, and go to state 78
    ADD    shift, and go to state 79
    COMMA  shift, and go to state 120

    $default  reduce using rule 62 (exp_comma_block)

    exp_comma_block  go to state 133


State 129

   59 term: IDENT L_PAREN expression exp_comma_block R_PAREN .

    $default  reduce using rule 59 (term)


State 130

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON . statement_block else_block ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 9 (statement_block)

    statement_block  go to state 134
    statement        go to state 98
    var              go to state 42


State 131

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON . statement_block ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 9 (statement_block)

    statement_block  go to state 135
    statement        go to state 98
    var              go to state 42


State 132

   20 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 136


State 133

   61 exp_comma_block: COMMA expression exp_comma_block .

    $default  reduce using rule 61 (exp_comma_block)


State 134

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_block . else_block ENDIF

    ELSE  shift, and go to state 137

    $default  reduce using rule 25 (else_block)

    else_block  go to state 138


State 135

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON statement_block . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 136

   20 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    NUMBER   shift, and go to state 47
    IDENT    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_expr            go to state 140
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    rel_expr             go to state 54
    expression           go to state 55
    multiplicative_expr  go to state 56
    term                 go to state 57
    var                  go to state 58


State 137

   27 else_block: ELSE . $@5 statement SEMICOLON statement_block

    $default  reduce using rule 26 ($@5)

    $@5  go to state 141


State 138

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_block else_block . ENDIF

    ENDIF  shift, and go to state 142


State 139

   19 statement: WHILE bool_expr BEGINLOOP $@4 statement SEMICOLON statement_block ENDLOOP .

    $default  reduce using rule 19 (statement)


State 140

   20 statement: DO BEGINLOOP statement SEMICOLON statement_block ENDLOOP WHILE bool_expr .
   30 bool_expr: bool_expr . OR relation_and_expr

    OR  shift, and go to state 76

    $default  reduce using rule 20 (statement)


State 141

   27 else_block: ELSE $@5 . statement SEMICOLON statement_block

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    statement  go to state 143
    var        go to state 42


State 142

   17 statement: IF bool_expr THEN $@3 statement SEMICOLON statement_block else_block ENDIF .

    $default  reduce using rule 17 (statement)


State 143

   27 else_block: ELSE $@5 statement . SEMICOLON statement_block

    SEMICOLON  shift, and go to state 144


State 144

   27 else_block: ELSE $@5 statement SEMICOLON . statement_block

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 9 (statement_block)

    statement_block  go to state 145
    statement        go to state 98
    var              go to state 42


State 145

   27 else_block: ELSE $@5 statement SEMICOLON statement_block .

    $default  reduce using rule 27 (else_block)
